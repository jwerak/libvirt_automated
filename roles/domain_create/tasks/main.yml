---
- name: gather list of already existing VMs
  community.libvirt.virt:
    command: list_vms
  register: virtlist
  delegate_to: "{{ libvirt_host }}"
  check_mode: false

- name: Prepare VM domain 
  when: vm_name not in virtlist.list_vms
  import_tasks: virt_prepare.yml

- name: Define vm {{ vm_name }}
  when: vm_name not in virtlist.list_vms
  community.libvirt.virt:
    command: define
    xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
  delegate_to: "{{ libvirt_host }}"

- name: make sure the VM is allways started
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  delegate_to: "{{ libvirt_host }}"
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2
