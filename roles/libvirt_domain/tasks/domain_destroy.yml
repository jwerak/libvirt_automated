---
- name: Gather list of still existing VMs
  community.libvirt.virt:
    command: list_vms
  register: virtlist
  delegate_to: "{{ libvirt_domain_libvirt_host }}"

- name: destroy/shutdown the existing VM if necessary
  when: libvirt_domain_name in virtlist.list_vms
  community.libvirt.virt:
    name: "{{ libvirt_domain_name }}"
    state: "{{ libvirt_domain_virt_dom_state }}"
  delegate_to: "{{ libvirt_domain_libvirt_host }}"

- name: remove the VM if wished (potentially with storage)
  when:
    - libvirt_domain_name in virtlist.list_vms
  ansible.builtin.command: >
    virsh undefine
    {% if libvirt_domain_virt_dom_remove_storage %}--remove-all-storage{% endif %}
    --domain {{ libvirt_domain_name }}
  delegate_to: "{{ libvirt_domain_libvirt_host }}"
